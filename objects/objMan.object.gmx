<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_speed = 0
image_blend = choose(c_aqua, c_lime, c_orange)
animationSpeed = .1

//for energy/ energy UI
ds_list_add(objGame.manList, self)
fullEnergy = 100
energy = fullEnergy

//for movement and movement effects
target = noone;
weight = 1
dir = 0
waypoint = noone
collided = false
distanceHome = point_distance(x, y, objDoor.x, objDoor.y)
normalSpeed = 3 * (60/room_speed)
wanderSpeed = .5 * (60/room_speed)

//for state/statechange
state = scrStateIdle
idleTime = 0
interactingWith = noone;
actionDelay = 0;
gateDestroyDelayTime = 2 * room_speed;

//combat
damage = 10
combatTarget = noone;
canAttack = true
attacking = false

//for inventory
tool = noone;
held = ds_stack_create();

//for day/night fx
baseGlowIntensity = 1.5;
glowIntensity = baseGlowIntensity;
maxFlickerRange = 0.05;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack cooldown

canAttack = true

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///wandering -&gt; idle
if state = scrStateWandering {
    state = scrStateIdle
    image_speed = 0
    image_index = 0
    hspeed = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
script_execute(state)

//energy down
energy -= .01
if energy &lt;= 0 {
    energy = 0
}

//facing
if hspeed &lt; 0 {
    image_xscale = -1
} else if hspeed &gt; 0 {
    image_xscale = 1
}

//attacking stuff
if !ds_stack_empty(held) {
    canAttack = false
}
if attacking = true {
    hspeed = 0
    image_speed = .14
}

//collision
if(!place_free(x + hspeed, y))
{
    hspeed = 0;
    collided = true;
}

//Light Flickering
var dif = choose(0.05, -0.05, 0);
glowIntensity += dif;
glowIntensity = clamp(glowIntensity, baseGlowIntensity - maxFlickerRange, baseGlowIntensity + maxFlickerRange);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if objGame.selected != self {
    //everyone else loses selection visual and returns to correct depth
    with objMan {
        if ds_stack_empty(held) {
            sprite_index = sprMan
        } else {
            sprite_index = sprManCollecting
        }
        depth = -2
    }
    //selection visual engaged, plus depth change to keep them in front
    if ds_stack_empty(held) {
        sprite_index = sprManSelected
    } else {
        sprite_index = sprManCollectingSelected
    }
    depth --
    //become selected
    objGame.selected = self
} else if state != scrStateInspired {
    if ds_stack_empty(held) {
        sprite_index = sprMan
    } else {
        sprite_index = sprManCollecting
    }
    depth = -2
    objGame.selected = noone
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//deals damage at end of attack animation
if state = scrStateCombat {
    if objGame.selected == self {
        sprite_index = sprManSelected
    } else {
        sprite_index = sprMan
    }
    image_speed = 0
    image_index = 0
    attacking = false
    canAttack = false
    //this alarm turns canAttack back to true
    alarm[1] = 60
    state = scrStateIdle
    
    if combatTarget != noone {
        combatTarget.energy -= damage
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = scrStateIdle;
x = objDoor.x;
y = room_height - 32 - sprite_get_height(sprMan);
image_alpha = 1.0;
hspeed = 0;
image_speed = 0;
image_index = 0;
sprite_index = sprMan;
target = noone;
waypoint = noone;
ds_stack_clear(held);
tool = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_text(x,y,canAttack)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
