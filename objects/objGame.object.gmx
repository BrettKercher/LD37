<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
selected = noone
scrollSpeed = 4 * (60/room_speed)

manList = ds_list_create()

resources[WOOD] = 0;
resources[ROCK] = 0;
resources[FOOD] = 0;

tools[AXE] = 0;
tools[PICK] = 0;
tools[SPEAR] = 0;

scrPlaceResources()

//view parameters
viewwMin = view_wview/2
viewhMin = view_hview/2
viewwMax = view_wview*2
viewhMax = view_hview*2

//smaller = faster
zoomSpeed = 5

//If not noone, begin transitioning to new room
newRoom = noone;
fadeAlpha = 0;
fadeOut = true; //true for in, false for out
fadeSpeed = 0.01;
//roomTransitionSurface = surface_create(view_wview, view_hview);
roomTransitionSurface = surface_create(room_width, room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scrGetKeyboardInput();

//scroll view
if right {
    view_xview += scrollSpeed
} else if left {
    view_xview -= scrollSpeed
}

//zoom view
scrZoomView()

//cant go that far
scrClampView()

//resest the game
if restart {
    room_restart()
}

if(newRoom != noone)
{
    if(fadeOut)
    {
        fadeAlpha += fadeSpeed;
        if(fadeAlpha &gt;= 1.0)
        {
            room_goto(newRoom);
            fadeOut = false;
        }
    }
    else 
    {
        fadeAlpha -= fadeSpeed;
        if(fadeAlpha &lt;= 0.0)
        {
            fadeOut = true;
            
            //If newRoom != room, idol was clicked again during fade in
            if(newRoom == room)
            {
                newRoom = noone;
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//inspires if someone is selected
if selected != noone {
    //delete existing waypoints for the selected dude
    if instance_exists(objWaypoint) {
        with objWaypoint {
            if owner == objGame.selected {
                instance_destroy()
            }
        }
    }
    //create new
    var waypointHeight = room_height - 32 - sprite_get_height(sprWaypoint);
    objGame.selected.waypoint = instance_create(mouse_x, waypointHeight, objWaypoint)
    
    //inspire man
    if instance_exists(objMan) {
        with objGame.selected {
            state = scrStateInspired
            show_debug_message("Inspired")
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_text(0 , 0, resources[WOOD])
draw_text(0 , 32, resources[ROCK])
draw_text(0 , 64, resources[FOOD])


var sprnum = sprite_get_number(sprEnergyBar)
var size = ds_list_size(manList)
var buffer = sprite_get_height(sprEnergyBar)
for (i = 0; i &lt; size; i++) {
   var next = ds_list_find_value(manList, i);
   draw_sprite_ext(sprEnergyBar,sprnum-ceil(sprnum*(next.energy/next.fullEnergy)),view_wport - 10,0+((2*i+1)*buffer),1,1,0,next.image_blend,1)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(newRoom != noone)
{
    surface_set_target(roomTransitionSurface);
    draw_clear(c_black);
    surface_reset_target();
    draw_surface_ext(roomTransitionSurface, 0, 0, 1, 1, 0, c_white, fadeAlpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
