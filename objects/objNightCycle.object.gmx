<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

//How fast time goes by
timeScale = 10;
dayNumber = 1;

dawnStartTime = 16200 / 60;  //4:30am
dayStartTime = 32400 / 60;   //9:00am
duskStartTime = 59400 / 60;  //4:30pm
nightStartTime = 75600 / 60; //9:00pm

midnight = 86400 / 60;
noon = 43200 / 60;

//Darkness values
dawnAlpha = 0.4;
dayAlpha = 0.0;
duskAlpha = 0.5;
nightAlpha = 0.7;

transitionSpeed = 0.00025;

//Start at Dawn
alpha = dawnAlpha;
phase = DAWN;
currentTime = dawnStartTime;

//Texture to overlay
nightSurface = surface_create(room_width, room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!objGame.endOfDay)
{
    currentTime += (1 / room_speed) * timeScale;
}

if(currentTime &gt; midnight)
{
    scrDoEndOfDay();
}

if(phase == DAWN)
{
    if(alpha &gt; dawnAlpha)
    {
        alpha -= transitionSpeed
    }
    
    if(currentTime &gt; dayStartTime)
    {
        phase = DAY;
    }
}

if(phase == DAY)
{
    if(alpha &gt; dayAlpha)
    {
        alpha -= transitionSpeed
    }
    
    if(currentTime &gt; duskStartTime)
    {
        phase = DUSK;
    }
}

if(phase == DUSK)
{
    if(alpha &lt; duskAlpha)
    {
        alpha += transitionSpeed
    }
    
    if(currentTime &gt; nightStartTime)
    {
        phase = NIGHT;
    }
}

if(phase == NIGHT)
{
    if(alpha &lt; nightAlpha)
    {
        alpha += transitionSpeed
    }
    
    if(currentTime &gt; dawnStartTime and currentTime &lt; nightStartTime)
    {
        phase = DAWN;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tempTime = currentTime;
var AmPm = "AM";

if(tempTime &gt;= noon)
{
    tempTime -= noon;
    AmPm = "PM";
}

var hours = floor(tempTime / 60);
var minutes = floor(tempTime - (hours * 60));

if(hours == 0)
{
    hours = 12;
}

var timeString = string_format(minutes, 2, 0);
timeString = string_replace(timeString, ' ', '0');

draw_set_alpha(1 - objGame.fadeAlpha);
draw_text(0 , 96, string(hours) + ":" + timeString + AmPm);
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(room == Outside) and surface_exists(nightSurface)
{
    surface_set_target(nightSurface);
    draw_clear(c_black);
    //Draw Glows
    with(objMan)
    {
        draw_set_blend_mode(bm_src_color);
        draw_sprite_ext(sprLightSourceGlow, 0, x, y + (sprite_get_width(sprMan) / 2), glowIntensity, glowIntensity, image_angle, image_blend, image_alpha);
        draw_set_blend_mode(bm_normal);
    }
    surface_reset_target();
    draw_surface_ext(nightSurface, 0, 0, 1, 1, 0, c_white, alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Day early

scrDoEndOfDay();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
